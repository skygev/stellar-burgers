describe('Интеграционные тесты на Cypress написаны для страницы конструктора бургера', () => {
  beforeEach(() => {
    // Созданы моковые данные для ингредиентов (например, в файле ingredients.json)
    // Настроен перехват запроса на эндпоинт 'api/ingredients', в ответе на который возвращаются созданные ранее моковые данные
    cy.intercept('GET', '**/ingredients', { fixture: 'ingredients.json' }).as(
      'getIngredients'
    );

    cy.clearCookies();
    cy.clearLocalStorage();
    cy.visit('/');
    cy.wait('@getIngredients');
  });

  it('Протестировано добавление ингредиента из списка в конструктор. Минимальные требования — добавление одного ингредиента, в идеале — добавление булок и добавление начинок', () => {
    // Проверка начального состояния кнопки "Оформить заказ"
    // 1. Проверяем, что кнопка изначально неактивна (когда конструктор пуст)
    cy.contains('Оформить заказ').should('exist');

    // Добавление булки
    // 1. Проверяем, что булка отсутствует в конструкторе
    cy.contains('Выберите булки').should('exist');

    // 2. Выполняем действие - добавляем булку
    cy.contains('Флюоресцентная булка R2-D3')
      .closest('li')
      .within(() => cy.contains('Добавить').click());

    // 3. Проверяем, что булка появилась в конструкторе
    cy.contains('Выберите булки').should('not.exist');
    // Проверяем наличие булки в области конструктора (около кнопки "Оформить заказ")
    cy.contains('Оформить заказ')
      .parent()
      .parent()
      .within(() => {
        cy.contains('Флюоресцентная булка R2-D3').should('exist');
      });

    // Добавление начинки
    // 1. Проверяем, что начинка отсутствует в конструкторе
    cy.contains('Выберите начинку').should('exist');

    // 2. Выполняем действие - добавляем начинку
    cy.contains('Мясо бессмертных моллюсков Protostomia')
      .closest('li')
      .within(() => cy.contains('Добавить').click());

    // 3. Проверяем, что начинка появилась в конструкторе
    cy.contains('Выберите начинку').should('not.exist');
    cy.contains('Оформить заказ')
      .parent()
      .parent()
      .within(() => {
        cy.contains('Мясо бессмертных моллюсков Protostomia').should('exist');
      });

    //  проверка добавления ингредиентов в конструктор
    cy.contains('Оформить заказ')
      .parent()
      .parent()
      .within(() => {
        // 1. Проверяем, что добавленная булка присутствует в конструкторе
        cy.contains('Флюоресцентная булка R2-D3').should('exist');

        // 2. Проверяем, что добавленная начинка присутствует в конструкторе
        cy.contains('Мясо бессмертных моллюсков Protostomia').should('exist');
      });

    // 3. Проверяем, что кнопка "Оформить заказ" стала доступной (как следствие добавления ингредиентов)
    cy.contains('Оформить заказ').should('be.visible').and('not.be.disabled');
  });

  it('Протестирована работа модальных окон: открытие модального окна ингредиента; закрытие по клику на оверлей', () => {
    // Открытие модального окна ингредиента
    // 1. Проверяем, что модальное окно отсутствует
    cy.contains('Детали ингридиента').should('not.exist');

    // 2. Выполняем действие - кликаем на ингредиент
    cy.contains('Флюоресцентная булка R2-D3').click();

    // 3. Проверяем, что модальное окно появилось с корректным ингредиентом
    cy.contains('Детали ингридиента').should('exist');
    // Проверяем наличие ингредиента именно в модальном окне
    cy.get('#modals').within(() => {
      cy.contains('Флюоресцентная булка R2-D3').should('be.visible');
    });

    // Закрытие модального окна по клику вне модального окна (имитация клика по оверлею)
    // 1. Проверяем, что модальное окно присутствует (уже проверено выше)

    // 2. Выполняем действие - кликаем по оверлею модального окна (клик вне области содержимого)
    cy.get('body').click(0, 0);

    // 3. Проверяем, что модальное окно исчезло
    cy.contains('Детали ингридиента').should('not.exist');
  });

  it('Протестировано закрытие модального окна ингредиента по клику на кнопку закрытия', () => {
    // Открытие модального окна ингредиента
    // 1. Проверяем, что модальное окно отсутствует
    cy.contains('Детали ингридиента').should('not.exist');

    // 2. Выполняем действие - кликаем на ингредиент
    cy.contains('Флюоресцентная булка R2-D3').click();

    // 3. Проверяем, что модальное окно появилось с корректным ингредиентом
    cy.contains('Детали ингридиента').should('exist');
    // Проверяем наличие ингредиента именно в модальном окне
    cy.get('#modals').within(() => {
      cy.contains('Флюоресцентная булка R2-D3').should('be.visible');
    });

    // Закрытие модального окна по клику на кнопку закрытия
    // 1. Проверяем, что модальное окно присутствует (уже проверено выше)

    // 2. Выполняем действие - кликаем на кнопку закрытия модального окна
    cy.get('#modals').find('button').click();

    // 3. Проверяем, что модальное окно исчезло
    cy.contains('Детали ингридиента').should('not.exist');
  });

  it('Создание заказа: Созданы моковые данные ответа на запрос данных пользователя и создания заказа. Подставляются моковые токены авторизации. Собирается бургер. Вызывается клик по кнопке «Оформить заказ». Проверяется, что модальное окно открылось и номер заказа верный. Закрывается модальное окно и проверяется успешность закрытия. Проверяется, что конструктор пуст', () => {
    // Токены авторизации
    cy.setCookie('accessToken', 'test-access');
    window.localStorage.setItem('refreshToken', 'test-refresh');

    // Мокаем профиль пользователя
    cy.intercept('GET', '**/auth/user', {
      statusCode: 200,
      fixture: 'user.json'
    }).as('getUser');

    // Перезагрузка, чтобы сработала верификация
    cy.visit('/');
    cy.wait(['@getIngredients', '@getUser']);

    // Мокаем создание заказа
    cy.intercept('POST', '**/orders', {
      statusCode: 200,
      fixture: 'order.json'
    }).as('postOrder');

    // Собираем бургер: булка + начинка
    // 1. Проверяем начальное состояние конструктора
    cy.contains('Выберите булки').should('exist');
    cy.contains('Выберите начинку').should('exist');
    // Проверяем, что кнопка "Оформить заказ" изначально неактивна
    cy.contains('Оформить заказ').should('exist');

    // 2. Добавляем булку
    cy.contains('Флюоресцентная булка R2-D3')
      .closest('li')
      .within(() => cy.contains('Добавить').click());

    // 3. Проверяем, что булка добавилась
    cy.contains('Выберите булки').should('not.exist');
    cy.contains('Оформить заказ')
      .parent()
      .parent()
      .within(() => {
        cy.contains('Флюоресцентная булка R2-D3').should('exist');
      });

    // 4. Добавляем начинку
    cy.contains('Мясо бессмертных моллюсков Protostomia')
      .closest('li')
      .within(() => cy.contains('Добавить').click());

    // 5. Проверяем, что начинка добавилась
    cy.contains('Выберите начинку').should('not.exist');
    cy.contains('Оформить заказ')
      .parent()
      .parent()
      .within(() => {
        cy.contains('Мясо бессмертных моллюсков Protostomia').should('exist');
      });

    // 6.  проверка добавления ингредиентов в конструктор
    cy.contains('Оформить заказ')
      .parent()
      .parent()
      .within(() => {
        cy.contains('Флюоресцентная булка R2-D3').should('exist');
        cy.contains('Мясо бессмертных моллюсков Protostomia').should('exist');
      });

    // 7. Проверяем, что кнопка "Оформить заказ" стала активной (как следствие добавления ингредиентов)
    cy.contains('Оформить заказ').should('be.visible').and('not.be.disabled');

    // Создание заказа
    // 1. Проверяем, что модальное окно заказа отсутствует
    cy.contains('идентификатор заказа').should('not.exist');

    // 2. Выполняем действие - оформляем заказ
    cy.contains('Оформить заказ').click();
    cy.wait('@postOrder');

    // 3. Проверяем, что модальное окно с номером заказа появилось
    cy.get('#modals').within(() => {
      cy.contains('идентификатор заказа').prev().should('have.text', '12345');
    });

    // Закрытие модального окна заказа
    // 1. Проверяем, что модальное окно присутствует (уже проверено выше)

    // 2. Выполняем действие - закрываем модалку
    cy.get('body').type('{esc}');

    // 3. Проверяем, что модальное окно исчезло
    cy.contains('идентификатор заказа').should('not.exist');

    // Проверка очистки конструктора после оформления заказа
    // 1. Проверяем, что ингредиенты присутствовали в конструкторе (уже проверено выше в строках 103-111)
    // 2. Действие - заказ оформлен и модалка закрыта (уже выполнено выше)
    // 3. Проверяем, что конструктор очистился
    cy.contains('Выберите булки').should('exist');
    cy.contains('Выберите начинку').should('exist');

    // Очистка моковых данных после завершения теста
    cy.clearCookies();
    cy.clearLocalStorage();
  });
});
